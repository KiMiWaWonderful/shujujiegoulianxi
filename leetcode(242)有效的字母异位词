我的做法：错误

 public boolean isAnagram(String s, String t) {
//        Set<String> set1 = new HashSet<>() ;
//        Set<String> set2 = new HashSet<>() ;

        if(s.length() != t.length()){
            return false;
        }
        Set<Character> set1 = new HashSet<>() ;
        Set<Character> set2 = new HashSet<>() ;

        for (int i = 0; i <s.length() ; i++) {
            char c = s.charAt(i);
            set1.add(c);
        }

        for (int i = 0; i <t.length() ; i++) {
            char c = t.charAt(i);
            set2.add(c);
        }

        Iterator ite1 = set1.iterator();
        Iterator ite2 = set2.iterator();

        boolean isFullEqual = true;

        while (ite2.hasNext()){
            if(!set1.contains(ite2.next())){
                isFullEqual = false;
            }
        }
        return  isFullEqual;


    }
    
    别人的做法：
     if(s.length() != t.length()){
            return false;
        }
     int [] chars = new int[26];

        for (char c:s.toCharArray()) {
            chars[c-'a']++;
        }

        for (char c:t.toCharArray()) {
            chars[c-'a']--;
        }

        for(int i:chars){
            if(i!=0){
                return false;
            }
        }
        return true;

另一种：
 if(s.length() != t.length()){
            return false;
        }
char[] sc = s.toCharArray();
//        char[] tc = t.toCharArray();
//        Arrays.sort(sc);
//        Arrays.sort(tc);
//
//        for (int i = 0; i <sc.length ; i++) {
//            if(sc[i] != tc[i]){
//                return false;
//            }
//        }
//        return true;

    
