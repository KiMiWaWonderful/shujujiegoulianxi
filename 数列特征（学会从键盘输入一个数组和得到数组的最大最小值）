0分的做法：

import java.util.Scanner;

public class Main {
	

	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("请输入整数n:");
		int n = sc.nextInt();
		
		int a[] = new int [n];
		System.out.println("请输入整数数组a[]:");
		for(int i = 0;i<n;i++) {
			a[i] = sc.nextInt();
		}
		
	
		//排序
		for(int i = 0;i<n;i++) {
			if(a[i] > a[i+1]) {
				int temp = a[i];
				a[i] = a[i+1];
				a[i+1] = temp;
			}
		}
		System.out.println(a[n-1]);
		System.out.println(a[0]);
		
		//数组相加
				int sum = 0;
				for(int i = 0;i<n;i++) {
					sum = sum + a[i];
				}
				System.out.println(sum);
		
//		System.out.println(a[n-1]);
//		System.out.println(a[0]);
//		System.out.println(sum);
	}

}

100分的做法：

import java.util.Scanner;

public class Main {
	

	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		//System.out.println("请输入整数n:");
		int n = sc.nextInt();
		
		int a[] = new int [n];
		//System.out.println("请输入整数数组a[]:");
		for(int i = 0;i<n;i++) {
			a[i] = sc.nextInt();
		}
		
	    int min = 0 ;
	    int max = 0;
		//排序
	    min = max = a[0];
		for(int i = 1;i<n;i++) {
		
			if(a[i]>max) {
				max = a[i];
				
			}
			if(a[i]<min) {
				min = a[i];
			}
		}

		
		//数组相加
				int sum = 0;
				for(int i = 0;i<n;i++) {
					sum = sum + a[i];
				}
				
		
		System.out.println(max);
		System.out.println(min);
		System.out.println(sum);
	}

}


我的另一种做法：（100）使用java的Arrays.sort()函数
import java.util.Arrays;
import java.util.Scanner;

public class Shulietezheng {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Scanner scanner = new Scanner(System.in);
		int n = scanner.nextInt();
		int[] arr = new int[n];
		for (int i = 0; i < n; i++) {
			arr[i] = scanner.nextInt();
		}
		
		//int[] arr = new int[] {22,33,444,9,8988};
		Arrays.sort(arr);
		int j = 0;
		for (int i = 0; i < arr.length; i++) {
			j=j+arr[i];
		}
		System.out.println(arr[n-1]);
		System.out.println(arr[0]);
		System.out.println(j);
//		for (int i = 0; i < arr.length; i++) {
//			System.out.println(arr[i]);
//		}

	}

}


